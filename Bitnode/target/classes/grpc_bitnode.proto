syntax = "proto3";

package grpc;

option java_multiple_files = true;
option java_package = "bdcc.grpc";
option java_outer_classname = "NodeOperationsProto";

service NodeOperations {
    // Notify node with node info + random auction info
    rpc notifyNode (NodeNotification) returns (NodeNotification) {}
    // Find Node
    rpc findNode(NodeSecInfo) returns (stream NodeSecInfo) {}
    // Initial node lookup
    rpc lookupNode(NodeSecInfo) returns (stream NodeSecInfo) {}
    // Find if node has value
    rpc findValue(NodeInfo) returns (stream NodeInfo) {}

    rpc makeTransaction(TransactionInfo) returns (NodeResponse) {}

    rpc infoAuction(NodeSecInfo) returns (InfoAuction) {}

    rpc makeBid(MakeBid) returns (NodeResponse) {}

    rpc resultsAuction(ResultsAuction) returns (TransactionInfo) {}

}
  

 // Return with addresses and node info
message NodeInfo {
  string user_id = 1;
  string user_address = 2;
}

message NodeSecInfo {
  string user_id = 1;
  string user_address = 2;
  string public_key = 3;
}


message TransactionInfo {
  string buyer_id = 1;
  string amount = 2;
  string seller_id = 3;
}

message NodeNotification {
  string user_id = 1;
  string user_address = 2;
  string public_key = 3;
  string auction_id = 4;
  string item = 5;
  string max_bid = 6;
  string random_auction_id = 7;
  string random_user_id = 8;
  string random_item = 9;
  string random_max_bid = 10;
}


message InfoAuction {
  string seller_id = 1;
  string auction_id = 2;
  string item = 3;
  string amount = 4;
  string buyer_id = 5;
  string buyer_bid = 6;
}


message MakeBid {
  string buyer_id = 1;
  string auction_id = 2;
  string amount = 3;
}


message ResultsAuction{
  string auction_id = 1;
  string buyer_id = 2;
  string value = 3;
  string seller_id = 4;
  string seller_address = 5;
  string seller_public_key = 6;
}


message NodeResponse{
  string status = 1;
}

